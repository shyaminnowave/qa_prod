{"version":3,"file":"static/js/791.825f89cf.chunk.js","mappings":"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","sources":["component/RoleManagement/RoleManagement.js"],"sourcesContent":["import React,{useEffect, useState} from \"react\";\nimport \"./RoleManagement.scss\";\nimport axiosWithAuth from \"../../utils/axiosClienttok\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getListofRoles ,getListOfPermissions } from \"../../Redux/Roleandpermissionreducer/RoleAndPermissionReducer\";\nimport UpdateRole from \"./updateRoles/UpdateRole\";\nimport { toast } from \"react-toastify\";\n\nfunction RoleManagement() {\n    \n    const roles=useSelector((state)=>state.RoleAndPermissionReducer.roles);\n    const permissions=useSelector((state)=>state.RoleAndPermissionReducer.permissions);\n    const dispatch=useDispatch();\n\n    const[create,setCreate]=useState(false);\n    const[update,setUpdate]=useState(false);\n    const[createRole,setCreateRole]=useState('');\n    const [selectedRole, setSelectedRole] = useState('');\n    const [selectedPermissions, setSelectedPermissions] = useState([]);\n\n    useEffect(()=>{\n      dispatch(getListofRoles());\n      dispatch(getListOfPermissions());\n    },[])\n\n    const handleRoleChange = (e) => {\n      setSelectedRole(e.target.value);\n    };\n\n    const handleOpenCreate=()=>{\n        setCreate(true);\n        setUpdate(false);\n    }\n\n    const handleOpenUpdate=()=>{\n        setUpdate(true);\n        setCreate(false);\n    }\n\n  \n\n  const handleAddPermission = (permission) => {\n    if (!selectedPermissions.includes(permission)) {\n      setSelectedPermissions([...selectedPermissions, permission]);\n    } else {\n      setSelectedPermissions(selectedPermissions.filter(item => item !== permission));\n    }\n  };\n\n  async function handleCreateRole(e){\n    e.preventDefault()\n    const ids = selectedPermissions?.map(entry => entry.id);\n    try {\n      const response=await axiosWithAuth.post('/create-group/',{name:createRole,permissions:ids});\n      console.log(response);\n      if(response?.data?.success===true){\n        toast.success('Role created');\n      }\n    } catch (error) {\n      console.log(error);\n      toast.error('Error');\n    }\n    finally{\n      setCreate(false);\n      setSelectedPermissions([]);\n      dispatch(getListofRoles());\n    }\n\n  }\n  \n  return (\n    <div className=\"role_mangement\">\n      <div className=\"inner_role_mangement\">\n        <div className=\"roles\">\n          <table border={1}>\n            <tbody>\n              <tr className=\"column_name\">\n                <th>Role</th>\n              </tr>\n              \n               { roles && roles?.map((item,index)=>(\n                  <tr className=\"column_value\" key={index}>\n                    <th>{item?.name}</th>\n                  </tr>\n               ))}\n            </tbody>\n          </table>\n        </div>\n        <div className=\"create_edit\">\n          <div className=\"button\">\n            <button className={create? \"colour\":\"normal\"} onClick={handleOpenCreate}>Create Role</button>\n            <button className={update? \"colour\":\"normal\"} onClick={handleOpenUpdate}>Edit Role</button>\n          </div>\n          { create && <div className=\"create_section\">\n                    <div className=\"add_role\">\n                        <input type=\"text\" placeholder='Create Role' onChange={(e)=>setCreateRole(e.target.value)} />\n                    </div>\n                    <div className=\"add_permissions\">\n                        <div className=\"list_of_permissions\">\n                              <table border={1}>\n                                <tbody>\n                                    <tr className=\"column_name\"> \n                                        <th>Permissions</th>\n                                    </tr>\n                                      {permissions && permissions?.map((item,index)=>(\n                                        <tr className={`column_value ${selectedPermissions.includes(item) ? 'selected' : ''}`} key={index} onClick={() => handleAddPermission(item)}>\n                                            <th>{item?.name}</th>\n                                        </tr>\n                                     ))}\n                                </tbody>\n                              </table>\n                        </div>\n                        <div className=\"added_list_of_permissions\">\n                        <table border={1}>\n                                <tbody>\n                                    <tr className=\"column_name\">\n                                        <th > Added Permissions</th>\n                                    </tr>\n                                    {selectedPermissions && selectedPermissions.map((item,index)=>(\n                                      <tr className=\"column_value\">\n                                        <th>{item?.name}</th>\n                                      </tr>\n                                    ))}\n                                   \n                                </tbody>\n                              </table>\n                        </div>\n                    </div>\n                    <div className=\"button_\">\n                        <button onClick={handleCreateRole}>Add role</button>\n                    </div>\n                </div>\n          }\n          {update &&  <UpdateRole/> }\n\n        \n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default RoleManagement;\n"],"names":["roles","useSelector","state","RoleAndPermissionReducer","permissions","dispatch","useDispatch","create","setCreate","useState","update","setUpdate","createRole","setCreateRole","selectedRole","setSelectedRole","selectedPermissions","setSelectedPermissions","useEffect","getListofRoles","getListOfPermissions","_jsx","className","children","_jsxs","border","map","item","index","name","onClick","handleOpenCreate","handleOpenUpdate","type","placeholder","onChange","e","target","value","concat","includes","handleAddPermission","permission","filter","async","preventDefault","ids","entry","id","_response$data","response","axiosWithAuth","post","console","log","data","success","toast","error","UpdateRole"],"sourceRoot":""}