{"version":3,"file":"static/js/360.6b0fef50.chunk.js","mappings":"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","sources":["component/NatcoList/natcolistatable/NatcoListTable.js","component/pagination/natcoPagination/NatcoPagination.js","component/NatcoList/NatcoList.js"],"sourcesContent":["import React from 'react'\nimport './NatcoListTable.scss'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport NoData from \"../../nodata/NoData\"\n\nfunction NatcoListTable({Data}) {\n  const currentNatcoPage=useSelector((state)=>state.NatcoListPaginationReducer.currentNatcoPage);\n\n  console.log(Data);\n  console.log(Data);\n  return (\n    <div className=\"natco_list_table\">\n        <div className=\"inner_natco_list_table\">\n            <table border={1}>\n              <thead>\n                <tr>\n                    <th>Id</th>\n                    <th>Name</th>\n                    <th>Jira Id</th>\n                    <th>Natco</th>\n                    <th>Langauge</th>\n                    <th>Status</th>\n                    <th>Device</th>\n                    <th>Applicable</th>\n                </tr>\n                </thead>\n              <tbody>\n                { Data?.data?.length>0 &&  Data?.data?.map((item,index)=>(\n                  <tr  key={index}>\n                    <td>{(currentNatcoPage-1)*10+index+1}</td>\n                    <td id='name'>{item?.test_case}</td>\n                    <td>{item?.jira_id}</td>\n                    <td>{item?.natco}</td>\n                    <td>{item?.language}</td>\n                    <td>{item?.status}</td>\n                    <td>{item?.device}</td>\n                    <td>{item?.applicable}</td>\n                  </tr>\n                ))}\n                </tbody>\n                {/* {Data?.data?.length===0 && <NoData/>} */}\n                \n            </table>\n        </div>\n    </div>\n  )\n}\n\nexport default NatcoListTable","import React from \"react\";\nimport \"./NatcoPagination.scss\";\nimport { FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  decrementNatcoPage,\n  incrementNatcoPage,\n  setNatcoPage,\n} from \"../../../Redux/natcoListPagination/NatcoListPaginationReducer\";\n\nfunction NatcoPagination({ page, totalPage, count }) {\n  const dispatch = useDispatch();\n  const currentNatcoPage = useSelector(\n    (state) => state.NatcoListPaginationReducer.currentNatcoPage\n  );\n  console.log(page, totalPage, count);\n\n  function decrementPages() {\n    if (currentNatcoPage !== 1) {\n      dispatch(decrementNatcoPage(currentNatcoPage - 1));\n    }\n  }\n\n  function incrementPages() {\n    if (currentNatcoPage !== totalPage) {\n      dispatch(incrementNatcoPage(currentNatcoPage + 1));\n    }\n  }\n\n  function setPageNumber(pageNumber) {\n    console.log(\"entered\");\n    dispatch(setNatcoPage(pageNumber));\n  }\n  const itemsPerPage = 10;\nconst totalPages = Math.ceil(totalPage / itemsPerPage);\n\n  const getPageNumbers = () => {\n    const currentPageGroup = Math.ceil(page / itemsPerPage);\n    const startPage = (currentPageGroup - 1) * itemsPerPage + 1;\n    const endPage = Math.min(startPage + itemsPerPage - 1, totalPage);\n    return Array.from({ length: endPage - startPage + 1 }, (_, i) => startPage + i);\n  };\n\n  return (\n    <div className=\"inner_pagination\">\n      {/* {page > 1 && (\n        <div className=\"prev_button\">\n          <button onClick={decrementPages}>\n            <FaChevronLeft />\n          </button>\n        </div>\n      )}\n      {Array.from({ length: totalPage }, (_, i) => (\n        <button\n          className={page === i + 1 ? \"page_number_s\" : \"page_number\"}\n          key={i + 1}\n          onClick={() => setPageNumber(i + 1)}\n        >\n          {i + 1}\n        </button>\n      ))}\n      {page < totalPage && (\n        <div className=\"next_button\">\n          <button onClick={incrementPages}>\n            <FaChevronRight />\n          </button>\n        </div>\n      )} */}\n      {page > 1 && (\n      <div className=\"prev_button\">\n        <button onClick={decrementPages}><FaChevronLeft /></button>\n      </div>\n    )}\n    {getPageNumbers().map((pageNumber) => (\n      <button\n        className={page === pageNumber ? \"page_number_s\" : \"page_number\"}\n        key={pageNumber}\n        onClick={() => setPageNumber(pageNumber)}\n      >\n        {pageNumber}\n      </button>\n    ))}\n    {page < totalPage && (\n      <div className=\"next_button\">\n        <button onClick={incrementPages}><FaChevronRight /></button>\n      </div>\n    )}\n    </div>\n  );\n}\n\nexport default NatcoPagination;\n","import React, { useEffect, useState } from \"react\";\nimport \"./NatcoList.scss\";\nimport NatcoListTable from \"./natcolistatable/NatcoListTable\";\nimport axiosWithAuth from \"../../utils/axiosClienttok\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getFilteredNatcoList,\n  getListOfNatcoList,\n} from \"../../Redux/natcotestlistreducer/NatcoListReucer\";\nimport NatcoPagination from \"../pagination/natcoPagination/NatcoPagination\";\nimport { setNatcoPage } from \"../../Redux/natcoListPagination/NatcoListPaginationReducer\";\nimport { setPage } from \"../../Redux/paginationReducer/PaginationReduer\";\nimport NoData from \"../nodata/NoData\";\n\nfunction NatcoList() {\n  const dispatch = useDispatch();\n  const currentNatcoPage = useSelector(\n    (state) => state.NatcoListPaginationReducer.currentNatcoPage\n  );\n  const natcoLists = useSelector((state) => state.NatcoListReducer.list);\n  console.log(currentNatcoPage);\n\n  const [selectedNatco, setSelectedNatco] = useState(\"\");\n  const [selectedLang, setSelectedLang] = useState(\"\");\n  const [selectedDev, setSelectedDev] = useState(\"\");\n  const [seletedStatus, setSelectedStatus] = useState(\"\");\n  const [selectedAplicable, setSelectedAplicable] = useState(\"\");\n  const [natcolist, setNatcoList] = useState([]);\n  const [langList, setLangList] = useState([]);\n  const [deviceList, setDeviceList] = useState([]);\n  const [jiraId, setJiraId] = useState(\"\");\n\n  useEffect(() => {\n    // to get the list of natco\n    async function getNatco() {\n      try {\n        const response = await axiosWithAuth.get(\"/natco-option/\");\n        setNatcoList(response.data.data);\n\n        console.log(response.data.data);\n      } catch (error) {}\n    }\n    // to get the list of language\n    async function getLang() {\n      try {\n        const response = await axiosWithAuth.get(\"/language-option/\");\n        setLangList(response.data.data);\n\n        console.log(response.data.data);\n      } catch (error) {}\n    }\n    // to get the list of devices\n    async function getdevice() {\n      try {\n        const response = await axiosWithAuth.get(\"/device-option/\");\n        setDeviceList(response.data.data);\n\n        console.log(response.data.data);\n      } catch (error) {}\n    }\n\n    getNatco();\n    getLang();\n    getdevice();\n  }, []);\n\n  // on initial render\n  useEffect(() => {\n    dispatch(setNatcoPage(1));\n    dispatch(\n      getListOfNatcoList({\n        \n        currentNatcoPage,\n       \n      })\n    );\n  }, []);\n  \n  // whenever the page number changes\n  useEffect(() => {\n    dispatch(\n      getFilteredNatcoList({\n        selectedNatco,\n        selectedLang,\n        selectedDev,\n        seletedStatus,\n        selectedAplicable,\n        currentNatcoPage,\n        jiraId,\n      })\n    );\n  }, [currentNatcoPage, dispatch]);\n\n  //  dropdown function for natco\n  function handleChangeNatco(e) {\n    setSelectedNatco(e.target.value);\n  }\n  //  dropdown function for language\n  function handleChangeLanguage(e) {\n    setSelectedLang(e.target.value);\n  }\n  //  dropdown function for device\n  function handleChangeDev(e) {\n    setSelectedDev(e.target.value);\n  }\n  //  dropdown function for status\n  function handleChangeStatus(e) {\n    setSelectedStatus(e.target.value);\n    console.log(e.target.value);\n  }\n\n  //  dropdown function for applicablity\n  function handleChangeAplicable(e) {\n    setSelectedAplicable(e.target.value);\n  }\n\n  // function to apply filter\n  async function handleApplyfilter(e) {\n    e.preventDefault();\n    dispatch(setNatcoPage(1));\n    dispatch(\n      getFilteredNatcoList({\n        selectedNatco,\n        selectedLang,\n        selectedDev,\n        seletedStatus,\n        selectedAplicable,\n        currentNatcoPage,\n        jiraId,\n      })\n    );\n  }\n\n  // function for reset the state\n  async function handleReset() {\n    setSelectedNatco(\"\");\n    setSelectedLang(\"\");\n    setSelectedDev(\"\");\n    setJiraId(\"\");\n    setSelectedAplicable(\"\");\n    setSelectedStatus(\"\");\n    dispatch(setNatcoPage(1));\n    dispatch(getListOfNatcoList(currentNatcoPage));\n  }\n  return (\n    <div className=\"natco_list\">\n      <div className=\"nacto_list_filters\">\n        <div className=\"filter_options\">\n          <div className=\"natco_name_list\">\n            <label htmlFor=\"todo-natco\"></label>\n            <select\n              id=\"todo-natco\"\n              value={selectedNatco}\n              onChange={handleChangeNatco}\n            >\n              {\" \"}\n              <option value=\"\" disabled hidden>\n                Select Natco\n              </option>\n              {natcolist &&\n                natcolist.map((item, index) => (\n                  <option key={index} value={item?.natco}>\n                    {item.natco}\n                  </option>\n                ))}\n            </select>\n          </div>\n\n          <div className=\"language_list\">\n            <label htmlFor=\"todo-language\"></label>\n            <select\n              id=\"todo-language\"\n              value={selectedLang}\n              onChange={handleChangeLanguage}\n            >\n              {\" \"}\n              <option value=\"\" disabled hidden>\n                Select Language\n              </option>\n              {langList &&\n                langList.map((item, index) => (\n                  <option key={index} value={item?.language_name}>\n                    {item?.language_name}\n                  </option>\n                ))}\n            </select>\n          </div>\n\n          <div className=\"developed_list\">\n            <label htmlFor=\"todo-developed\"></label>\n            <select\n              id=\"todo-developed\"\n              value={selectedDev}\n              onChange={handleChangeDev}\n            >\n              {\" \"}\n              <option value=\"\" disabled hidden>\n                Select device\n              </option>\n              {deviceList &&\n                deviceList.map((item, index) => (\n                  <option key={index} value={item?.name}>\n                    {item?.name}\n                  </option>\n                ))}\n            </select>\n          </div>\n\n          <div className=\"status_list\">\n            <label htmlFor=\"todo-status\"></label>\n            <select\n              id=\"todo-status\"\n              value={seletedStatus}\n              onChange={handleChangeStatus}\n            >\n              {\" \"}\n              <option value=\"\" disabled hidden>\n                Select status\n              </option>\n              <option value=\"in_development\">In development</option>\n              <option value=\"not_automatable\">development</option>\n              <option value=\"manual\">Manual</option>\n              <option value=\"complete\">Completed</option>\n              <option value=\"READY\">Ready</option>\n            </select>\n          </div>\n\n          <div className=\"applicable_list\">\n            <label htmlFor=\"todo-applicable\"></label>\n            <select\n              id=\"todo-applicable\"\n              value={selectedAplicable}\n              onChange={handleChangeAplicable}\n            >\n              {\" \"}\n              <option value=\"\" disabled hidden>\n                Select Applicability\n              </option>\n              <option value=\"True\">True</option>\n              <option value=\"False\">False</option>\n            </select>\n          </div>\n\n          <div className=\"jira_id_search_bar\">\n            <input\n              type=\"text\"\n              value={jiraId}\n              placeholder=\"Enter Jira id\"\n              onChange={(e) => setJiraId(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"filter_button-natco-list\">\n          <button onClick={handleApplyfilter}>Apply filter</button>\n          <button onClick={handleReset}>Reset</button>\n        </div>\n      </div>\n\n      <div className=\"natco_list_table_section\">\n      {/* if length is more then zero then list will get displayed */}\n        {natcoLists?.data?.length > 0 && <NatcoListTable Data={natcoLists} />}\n      {/* if length is === zero then no data avaiable will get displayed */}\n        {natcoLists?.data?.length === 0 && <NoData />}\n      </div>\n\n      <div className=\"pagination\">\n        <NatcoPagination\n          page={currentNatcoPage}\n          count={natcoLists?.count}\n          totalPage={natcoLists?.page_count + 1}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default NatcoList;\n"],"names":["_ref","_Data$data","_Data$data2","Data","currentNatcoPage","useSelector","state","NatcoListPaginationReducer","console","log","_jsx","className","children","_jsxs","border","data","length","map","item","index","id","test_case","jira_id","natco","language","status","device","applicable","page","totalPage","count","dispatch","useDispatch","Math","ceil","onClick","decrementNatcoPage","FaChevronLeft","getPageNumbers","startPage","endPage","min","Array","from","_","i","pageNumber","setNatcoPage","setPageNumber","incrementNatcoPage","FaChevronRight","_natcoLists$data","_natcoLists$data2","natcoLists","NatcoListReducer","list","selectedNatco","setSelectedNatco","useState","selectedLang","setSelectedLang","selectedDev","setSelectedDev","seletedStatus","setSelectedStatus","selectedAplicable","setSelectedAplicable","natcolist","setNatcoList","langList","setLangList","deviceList","setDeviceList","jiraId","setJiraId","useEffect","async","response","axiosWithAuth","get","error","getNatco","getLang","getdevice","getListOfNatcoList","getFilteredNatcoList","htmlFor","value","onChange","e","target","disabled","hidden","language_name","name","type","placeholder","preventDefault","NatcoListTable","NoData","NatcoPagination","page_count"],"sourceRoot":""}