{"version":3,"file":"static/js/381.ef3523bd.chunk.js","mappings":"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","sources":["component/NatcoList/natcolistatable/NatcoListTable.js","component/pagination/natcoPagination/NatcoPagination.js","component/nodata/NoData.js","component/NatcoList/NatcoList.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./NatcoListTable.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction NatcoListTable({ Data }) {\r\n  const currentNatcoPage = useSelector((state) => state.NatcoListPaginationReducer.currentNatcoPage);\r\n\r\n  console.log(Data);\r\n  console.log(Data);\r\n  return (\r\n    <div className=\"natco_list_table\">\r\n      <div className=\"inner_natco_list_table\">\r\n        <table border={1}>\r\n          <thead>\r\n            <tr>\r\n              <th>Id</th>\r\n              <th>Name</th>\r\n              <th>Jira Id</th>\r\n              <th>Natco</th>\r\n              <th>Langauge</th>\r\n              <th>Status</th>\r\n              <th>Device</th>\r\n              <th>Applicable</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Data?.data?.length > 0 &&\r\n              Data?.data?.map((item, index) => (\r\n                <tr key={index}>\r\n                  <td>{(currentNatcoPage - 1) * 10 + index + 1}</td>\r\n                  <td id=\"name\">{item?.test_case}</td>\r\n                  <td>{item?.jira_id}</td>\r\n                  <td>{item?.natco}</td>\r\n                  <td>{item?.language}</td>\r\n                  <td>{item?.status}</td>\r\n                  <td>{item?.device}</td>\r\n                  <td>{item?.applicable}</td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n          {/* {Data?.data?.length===0 && <NoData/>} */}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nNatcoListTable.propTypes = {\r\n  Data: PropTypes.shape({\r\n    data: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        test_case: PropTypes.string,\r\n        jira_id: PropTypes.string,\r\n        natco: PropTypes.string,\r\n        language: PropTypes.string,\r\n        status: PropTypes.string,\r\n        device: PropTypes.string,\r\n        applicable: PropTypes.string\r\n      })\r\n    )\r\n  })\r\n};\r\n\r\nexport default NatcoListTable;\r\n","import React from \"react\";\r\nimport \"./NatcoPagination.scss\";\r\nimport { FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  decrementNatcoPage,\r\n  incrementNatcoPage,\r\n  setNatcoPage\r\n} from \"../../../Redux/natcoListPagination/NatcoListPaginationReducer\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction NatcoPagination({ page, totalPage, count }) {\r\n  const dispatch = useDispatch();\r\n  const currentNatcoPage = useSelector((state) => state.NatcoListPaginationReducer.currentNatcoPage);\r\n  console.log(page, totalPage, count);\r\n\r\n  function decrementPages() {\r\n    if (currentNatcoPage !== 1) {\r\n      dispatch(decrementNatcoPage(currentNatcoPage - 1));\r\n    }\r\n  }\r\n\r\n  function incrementPages() {\r\n    if (currentNatcoPage !== totalPage) {\r\n      dispatch(incrementNatcoPage(currentNatcoPage + 1));\r\n    }\r\n  }\r\n\r\n  function setPageNumber(pageNumber) {\r\n    console.log(\"entered\");\r\n    dispatch(setNatcoPage(pageNumber));\r\n  }\r\n  const itemsPerPage = 10;\r\n  // const totalPages = Math.ceil(totalPage / itemsPerPage);\r\n\r\n  const getPageNumbers = () => {\r\n    const currentPageGroup = Math.ceil(page / itemsPerPage);\r\n    const startPage = (currentPageGroup - 1) * itemsPerPage + 1;\r\n    const endPage = Math.min(startPage + itemsPerPage - 1, totalPage);\r\n    return Array.from({ length: endPage - startPage + 1 }, (_, i) => startPage + i);\r\n  };\r\n\r\n  return (\r\n    <div className=\"inner_pagination\">\r\n      {/* {page > 1 && (\r\n        <div className=\"prev_button\">\r\n          <button onClick={decrementPages}>\r\n            <FaChevronLeft />\r\n          </button>\r\n        </div>\r\n      )}\r\n      {Array.from({ length: totalPage }, (_, i) => (\r\n        <button\r\n          className={page === i + 1 ? \"page_number_s\" : \"page_number\"}\r\n          key={i + 1}\r\n          onClick={() => setPageNumber(i + 1)}\r\n        >\r\n          {i + 1}\r\n        </button>\r\n      ))}\r\n      {page < totalPage && (\r\n        <div className=\"next_button\">\r\n          <button onClick={incrementPages}>\r\n            <FaChevronRight />\r\n          </button>\r\n        </div>\r\n      )} */}\r\n      {page > 1 && (\r\n        <div className=\"prev_button\">\r\n          <button onClick={decrementPages}>\r\n            <FaChevronLeft />\r\n          </button>\r\n        </div>\r\n      )}\r\n      {getPageNumbers().map((pageNumber) => (\r\n        <button\r\n          className={page === pageNumber ? \"page_number_s\" : \"page_number\"}\r\n          key={pageNumber}\r\n          onClick={() => setPageNumber(pageNumber)}\r\n        >\r\n          {pageNumber}\r\n        </button>\r\n      ))}\r\n      {page < totalPage && (\r\n        <div className=\"next_button\">\r\n          <button onClick={incrementPages}>\r\n            <FaChevronRight />\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nNatcoPagination.propTypes = {\r\n  page: PropTypes.number,\r\n  totalPage: PropTypes.number,\r\n  count: PropTypes.number\r\n};\r\n\r\nexport default NatcoPagination;\r\n","import React from \"react\";\r\nimport \"./NoData.scss\";\r\nfunction NoData() {\r\n  return (\r\n    <div className=\"nodata\">\r\n      <div className=\"inner_nodata\">\r\n        <h1>No Data available</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoData;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./NatcoList.scss\";\r\nimport NatcoListTable from \"./natcolistatable/NatcoListTable\";\r\nimport axiosWithAuth from \"../../utils/axiosClienttok\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getFilteredNatcoList, getListOfNatcoList } from \"../../Redux/natcotestlistreducer/NatcoListReucer\";\r\nimport NatcoPagination from \"../pagination/natcoPagination/NatcoPagination\";\r\nimport { setNatcoPage } from \"../../Redux/natcoListPagination/NatcoListPaginationReducer\";\r\nimport NoData from \"../nodata/NoData\";\r\n\r\nfunction NatcoList() {\r\n  const dispatch = useDispatch();\r\n  const currentNatcoPage = useSelector((state) => state.NatcoListPaginationReducer.currentNatcoPage);\r\n  const natcoLists = useSelector((state) => state.NatcoListReducer.list);\r\n  console.log(currentNatcoPage);\r\n\r\n  const [selectedNatco, setSelectedNatco] = useState(\"\");\r\n  const [selectedLang, setSelectedLang] = useState(\"\");\r\n  const [selectedDev, setSelectedDev] = useState(\"\");\r\n  const [seletedStatus, setSelectedStatus] = useState(\"\");\r\n  const [selectedAplicable, setSelectedAplicable] = useState(\"\");\r\n  const [natcolist, setNatcoList] = useState([]);\r\n  const [langList, setLangList] = useState([]);\r\n  const [deviceList, setDeviceList] = useState([]);\r\n  const [jiraId, setJiraId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // to get the list of natco\r\n    async function getNatco() {\r\n      try {\r\n        const response = await axiosWithAuth.get(\"/natco-option/\");\r\n        setNatcoList(response.data.data);\r\n\r\n        console.log(response.data.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    // to get the list of language\r\n    async function getLang() {\r\n      try {\r\n        const response = await axiosWithAuth.get(\"/language-option/\");\r\n        setLangList(response.data.data);\r\n\r\n        console.log(response.data.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    // to get the list of devices\r\n    async function getdevice() {\r\n      try {\r\n        const response = await axiosWithAuth.get(\"/device-option/\");\r\n        setDeviceList(response.data.data);\r\n\r\n        console.log(response.data.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n    getNatco();\r\n    getLang();\r\n    getdevice();\r\n  }, []);\r\n\r\n  // on initial render\r\n  useEffect(() => {\r\n    dispatch(setNatcoPage(1));\r\n    dispatch(\r\n      getListOfNatcoList({\r\n        currentNatcoPage\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  // whenever the page number changes\r\n  useEffect(() => {\r\n    dispatch(\r\n      getFilteredNatcoList({\r\n        selectedNatco,\r\n        selectedLang,\r\n        selectedDev,\r\n        seletedStatus,\r\n        selectedAplicable,\r\n        currentNatcoPage,\r\n        jiraId\r\n      })\r\n    );\r\n  }, [currentNatcoPage, dispatch]);\r\n\r\n  //  dropdown function for natco\r\n  function handleChangeNatco(e) {\r\n    setSelectedNatco(e.target.value);\r\n  }\r\n  //  dropdown function for language\r\n  function handleChangeLanguage(e) {\r\n    setSelectedLang(e.target.value);\r\n  }\r\n  //  dropdown function for device\r\n  function handleChangeDev(e) {\r\n    setSelectedDev(e.target.value);\r\n  }\r\n  //  dropdown function for status\r\n  function handleChangeStatus(e) {\r\n    setSelectedStatus(e.target.value);\r\n    console.log(e.target.value);\r\n  }\r\n\r\n  //  dropdown function for applicablity\r\n  function handleChangeAplicable(e) {\r\n    setSelectedAplicable(e.target.value);\r\n  }\r\n\r\n  // function to apply filter\r\n  async function handleApplyfilter(e) {\r\n    e.preventDefault();\r\n    dispatch(setNatcoPage(1));\r\n    dispatch(\r\n      getFilteredNatcoList({\r\n        selectedNatco,\r\n        selectedLang,\r\n        selectedDev,\r\n        seletedStatus,\r\n        selectedAplicable,\r\n        currentNatcoPage,\r\n        jiraId\r\n      })\r\n    );\r\n  }\r\n\r\n  // function for reset the state\r\n  async function handleReset() {\r\n    setSelectedNatco(\"\");\r\n    setSelectedLang(\"\");\r\n    setSelectedDev(\"\");\r\n    setJiraId(\"\");\r\n    setSelectedAplicable(\"\");\r\n    setSelectedStatus(\"\");\r\n    dispatch(setNatcoPage(1));\r\n    dispatch(getListOfNatcoList(currentNatcoPage));\r\n  }\r\n  return (\r\n    <div className=\"natco_list\">\r\n      <div className=\"nacto_list_filters\">\r\n        <div className=\"filter_options\">\r\n          <div className=\"natco_name_list\">\r\n            <label htmlFor=\"todo-natco\"></label>\r\n            <select id=\"todo-natco\" value={selectedNatco} onChange={handleChangeNatco}>\r\n              {\" \"}\r\n              <option value=\"\" disabled hidden>\r\n                Select Natco\r\n              </option>\r\n              {natcolist &&\r\n                natcolist.map((item, index) => (\r\n                  <option key={index} value={item?.natco}>\r\n                    {item.natco}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"language_list\">\r\n            <label htmlFor=\"todo-language\"></label>\r\n            <select id=\"todo-language\" value={selectedLang} onChange={handleChangeLanguage}>\r\n              {\" \"}\r\n              <option value=\"\" disabled hidden>\r\n                Select Language\r\n              </option>\r\n              {langList &&\r\n                langList.map((item, index) => (\r\n                  <option key={index} value={item?.language_name}>\r\n                    {item?.language_name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"developed_list\">\r\n            <label htmlFor=\"todo-developed\"></label>\r\n            <select id=\"todo-developed\" value={selectedDev} onChange={handleChangeDev}>\r\n              {\" \"}\r\n              <option value=\"\" disabled hidden>\r\n                Select device\r\n              </option>\r\n              {deviceList &&\r\n                deviceList.map((item, index) => (\r\n                  <option key={index} value={item?.name}>\r\n                    {item?.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"status_list\">\r\n            <label htmlFor=\"todo-status\"></label>\r\n            <select id=\"todo-status\" value={seletedStatus} onChange={handleChangeStatus}>\r\n              {\" \"}\r\n              <option value=\"\" disabled hidden>\r\n                Select status\r\n              </option>\r\n              <option value=\"in_development\">In development</option>\r\n              <option value=\"not_automatable\">development</option>\r\n              <option value=\"manual\">Manual</option>\r\n              <option value=\"complete\">Completed</option>\r\n              <option value=\"READY\">Ready</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"applicable_list\">\r\n            <label htmlFor=\"todo-applicable\"></label>\r\n            <select id=\"todo-applicable\" value={selectedAplicable} onChange={handleChangeAplicable}>\r\n              {\" \"}\r\n              <option value=\"\" disabled hidden>\r\n                Select Applicability\r\n              </option>\r\n              <option value=\"True\">True</option>\r\n              <option value=\"False\">False</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"jira_id_search_bar\">\r\n            <input type=\"text\" value={jiraId} placeholder=\"Enter Jira id\" onChange={(e) => setJiraId(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"filter_button-natco-list\">\r\n          <button onClick={handleApplyfilter}>Apply filter</button>\r\n          <button onClick={handleReset}>Reset</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"natco_list_table_section\">\r\n        {/* if length is more then zero then list will get displayed */}\r\n        {natcoLists?.data?.length > 0 && <NatcoListTable Data={natcoLists} />}\r\n        {/* if length is === zero then no data avaiable will get displayed */}\r\n        {natcoLists?.data?.length === 0 && <NoData />}\r\n      </div>\r\n\r\n      <div className=\"pagination\">\r\n        <NatcoPagination page={currentNatcoPage} count={natcoLists?.count} totalPage={natcoLists?.page_count + 1} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NatcoList;\r\n"],"names":["_ref","_Data$data","_Data$data2","Data","currentNatcoPage","useSelector","state","NatcoListPaginationReducer","console","log","_jsx","className","children","_jsxs","border","data","length","map","item","index","id","test_case","jira_id","natco","language","status","device","applicable","page","totalPage","count","dispatch","useDispatch","onClick","decrementNatcoPage","FaChevronLeft","getPageNumbers","startPage","Math","ceil","endPage","min","Array","from","_","i","pageNumber","setNatcoPage","setPageNumber","incrementNatcoPage","FaChevronRight","_natcoLists$data","_natcoLists$data2","natcoLists","NatcoListReducer","list","selectedNatco","setSelectedNatco","useState","selectedLang","setSelectedLang","selectedDev","setSelectedDev","seletedStatus","setSelectedStatus","selectedAplicable","setSelectedAplicable","natcolist","setNatcoList","langList","setLangList","deviceList","setDeviceList","jiraId","setJiraId","useEffect","async","response","axiosWithAuth","get","error","getNatco","getLang","getdevice","getListOfNatcoList","getFilteredNatcoList","htmlFor","value","onChange","e","target","disabled","hidden","language_name","name","type","placeholder","preventDefault","NatcoListTable","NoData","NatcoPagination","page_count"],"sourceRoot":""}